:Class Karte
⍝ Kasten -> 4 Fächer
⍝ neue Worte kommen neben den Kasten
⍝ beim "Lernen" kommen 20 Karten vom Stapel in den Kasten
⍝ gewusste in 2. Fach, nicht gewusste bleiben im Fach
⍝ wiederholen, bis 1. Fach leer
⍝ ------
⍝ Flag "direction": Hin(1) oder Her (Rückwärts,2)
⍝ hindi.json ist "Kastenvorrat" für "HindiHin" etc.
⍝ nächster tag: 20 neue vom stapel in 1
⍝
⍝ 3. tag: fach 2 wird gelernt, gewusste nach 3, nicht gewusste nach 1
⍝ 4. tag: 20 neue nach 1, F1 lernen und nach 2...
⍝ 5. tag: 20 neue nach 1,
⍝ 6. tag wie 3.
⍝ 7. tag wie 4.
⍝ 8. tag wie 5.
⍝ 9. tag wie 3.
⍝ 10.tag f3 wird gelernt, gewusste nach 4, nicht gewusste IMMER nach 1 zurück.

⍝ F2 wird 2× gefüllt, F3 3×, F4 2×. wenn F4 gelernt wird: gew. entfernen, nicht gewusste nach 1.

⍝ Lernen: Wort anzeigen , Warten...Bedeutung anzeigen und User entscheiden lassen, ob OK oder nicht
⍝ Verwalten: neue Karten anlegen. duplikate erkennen und bestätigen lassen!
⍝ 
⍝ Daten in .json-Datei, Aufruf Lerne'Hindi.json'
⍝ je .json-Datei: Day - 
⍝ Ablauf: 
⍝  1 1 2 1 1 2 1 1 2 3 1 1 2 1 1 2 1 1 2 3 4           
⍝  immer wenn 1 dran ist, kommen 20 neue + Inhalt von 1  (20 ist konfigurierbar wert)
⍝ solange das jeweilige "tages-fach" nicht "leergelernt" ist (=noch Karten enthält), wird der Fortschrittszähler ncht erhöht!!!


    :field public Wort←''
    :field public Übersetzung←''

    ∇ make arg
      :Implements constructor        
      :Access public
      (Wort Übersetzung)←3↑arg, Übersetzung Wort
    ∇




:EndClass
